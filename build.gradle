plugins {
	id 'org.springframework.boot' version '2.4.4'
}

apply plugin: 'java'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'checkstyle'

group 'com.bannergress'
sourceCompatibility = JavaVersion.VERSION_11

repositories {
	mavenCentral()
}

dependencyManagement {
	imports {
		mavenBom "org.keycloak.bom:keycloak-adapter-bom:$keycloak_version"
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.keycloak:keycloak-spring-boot-starter'
	implementation "org.hibernate:hibernate-envers"
  implementation 'org.flywaydb:flyway-core'
	implementation "com.google.guava:guava:${guava_version}"
	implementation "com.google.maps:google-maps-services:${google_maps_services_version}"
  implementation "com.squareup.okhttp3:okhttp:${okhttp_version}"

  annotationProcessor "net.karneim:pojobuilder:$pojobuilder_version"

  compileOnly "net.karneim:pojobuilder:$pojobuilder_version:annotations"

	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'org.postgresql:postgresql'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

checkstyle {
	configFile file('config/checkstyle/simple-checkstyle.xml')
	sourceSets = [project.sourceSets.main, project.sourceSets.test]
	maxErrors = 0
	maxWarnings = 0
}

test {
	environment SPRING_PROFILES_ACTIVE: environment.SPRING_PROFILES_ACTIVE ?: 'dev'
	useJUnitPlatform()
}

bootRun {
	environment SPRING_PROFILES_ACTIVE: environment.SPRING_PROFILES_ACTIVE ?: 'dev'
	if (project.hasProperty('jvmArgs')) {
		jvmArgs = (project.jvmArgs.split('\\s+') as List)
	}
}

